---
import Layout from '../../../../layouts/Layout.astro';
import BlogCard from '../../../../components/ui/BlogCard.astro';
import Pagination from '../../../../components/ui/Pagination.astro';
import { blogItems } from '../../../../data/blogItems';
import BlogSidebar from '../../../../components/ui/BlogSidebar.astro';
import WordColor from '../../../../components/ui/WordColor.astro';

export async function getStaticPaths() {
  const categories = [...new Set(blogItems.map(post => post.category))];
  const paths = [];

  for (const category of categories) {
    const posts = blogItems.filter(post => post.category.toLowerCase() === category.toLowerCase());
    const totalPosts = posts.length;
    const postsPerPage = 2;
    const totalPages = Math.ceil(totalPosts / postsPerPage);

    for (let page = 2; page <= totalPages; page++) {
      paths.push({
        params: { category: category.toLowerCase(), page: String(page) },
      });
    }
  }

  return paths;
}

const { category, page } = Astro.params;
const currentPage = Number(page);
const posts = blogItems
  .filter(post => post.category.toLowerCase() === category)
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

const postsPerPage = 2;
const totalPosts = posts.length;
const totalPages = Math.ceil(totalPosts / postsPerPage);

if (isNaN(currentPage) || currentPage < 2 || currentPage > totalPages) {
  return Astro.redirect(`/blog/category/${category}`);
}

const start = (currentPage - 1) * postsPerPage;
const end = Math.min(start + postsPerPage, totalPosts);
const categoryPosts = posts.slice(start, end);
---

<Layout title="Blog | Tech Blog">
  <section class="py-16 bg-gray-900/50 relative overflow-hidden">
  <div class="max-w-6xl mx-auto px-6 lg:px-12 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-3xl lg:text-4xl font-bold font-code capitalize inline-block relative text-white mb-1"
        data-animate="fadeInUp"
        data-delay="100">
        <WordColor text={category} wordsPerColor={1} />
        <div class="absolute -bottom-2 left-0 w-full h-1 bg-green-500 opacity-70"></div>
      </h2>
      <p 
        class="text-gray-400 mt-4 max-w-2xl mx-auto"
        data-animate="fadeInUp"
        data-delay="100"
      >
       Browse posts by category: "{category}" below.
      </p>
    </div>

    <!-- Three-Column Layout -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Left Sidebar -->
      <BlogSidebar />

      <!-- Blog Posts -->
      <div class="relative lg:col-span-2">
        {categoryPosts.length > 0 ? (
          <div class="grid gap-6">
            {categoryPosts.map((post, index) => (
              <BlogCard
                title={post.title}
                excerpt={post.excerpt}
                image={post.image}
                url={post.url}
                tags={post.tags}
                date={post.date}
                index={index}
                dataAnimate="fadeInUp"
                dataDelay={(index + 1) * 100}
              />
            ))}
          </div>
        ) : (
          <p>No posts available for this page.</p>
        )}
        {totalPages > 1 && (
          <Pagination currentPage={currentPage} totalPages={totalPages} baseUrl={`/blog/category/${category}`} />
        )}
        </div>
      </div>
    </div>
  </section>
</Layout>