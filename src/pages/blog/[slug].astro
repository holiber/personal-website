---
import Layout from '../../layouts/Layout.astro';
import BlogHeader from '../../components/BlogHeader.astro';
import AuthorCard from '../../components/ui/AuthorCard.astro';
import RelatedPost from '../../components/ui/RelatedPost.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }: { data: any }) => !data.draft);
  return posts.map((post: any) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props as { post: any };
const title = post.data.title;

// Render the MDX content
const { Content } = await post.render();

const allPosts = await getCollection('blog', ({ data }: { data: any }) => !data.draft);
const relatedPosts = allPosts.filter((p: any) => p.slug !== post.slug && p.data.tags.some((t: string) => post.data.tags.includes(t))).slice(0, 3);
---

<Layout title={title}>
  <section class="py-12 max-w-6xl mx-auto px-6 lg:px-12 relative z-10">
    <BlogHeader 
      title={post.data.title}
      date={post.data.date.toDateString()}
    />
    <div class="py-8 px-6 bg-gray-950 rounded-lg border border-gray-800 mb-8">
      {post.data.cover && (
        <div class="relative mb-8">
          <img 
            src={post.data.cover} 
            alt={post.data.title} 
            class="w-full object-cover rounded-lg border border-gray-800" 
          />
        </div>
      )}
      <article class="post-content">
        <Content />
      </article>
      

    </div>

    <AuthorCard 
    name="Alex Nazarov"
    bio="Full-stack developer passionate about creating innovative web solutions and sharing knowledge through technical writing."
    image="/img/avatar.jpg"
  />

    {relatedPosts.length > 0 && (
      <div class="relative">
        <h3 class="text-xl font-bold font-code text-white mb-6 flex items-center gap-2">
          <i class="fas fa-book text-green-400 led-glow"></i> Related Articles
        </h3>
        <div class="grid grid-cols-1 gap-6">
          {relatedPosts.map((related: any) => (
            <RelatedPost 
              title={related.data.title}
              excerpt={related.data.description || ''}
              image={related.data.cover || '/img/blog1.jpg'}
              url={`/blog/${related.slug}`}
              date={related.data.date.toDateString()}
            />
          ))}
        </div>
      </div>
    )}
  </section>
</Layout>