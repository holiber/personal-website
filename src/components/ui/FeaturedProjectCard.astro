---
import Icon from './Icon.astro';

interface Props {
  media: string;
  project: {
    slug: string;
    data: {
      title: string;
      description: string;
      video: string;
      icon: string;
      links: Array<{
        href: string;
        icon: string;
      }>;
    };
  };
  orientation?: 'left' | 'right';
}

const { project, orientation = 'left' } = Astro.props;

// Determine if media is a video or image
const isVideo = !!project.data.video;
---

<div class="grid grid-cols-1 md:grid-cols-2 gap-8 bg-gray-950 rounded-lg">
  {orientation === 'left' ? (
    <>
      {/* media */}
      <div class="relative mb-8 md:mb-0">
        {isVideo ? (
          <video
            class="w-full h-auto rounded-lg"
            src={project.data.video}
            autoplay
            loop
            muted
            playsinline></video>
        ) : (
          <img
            class="w-full h-auto rounded-lg"
            src={project.data.image}
            alt={project.data.title}
          />
        )}
      </div>

      {/* description and links */}
      <div class="p-6 flex flex-col justify-between">
        <h3 class="text-xl font-bold font-code text-white mb-2 flex items-center gap-2">
          <i class={`fas ${project.data.icon} text-green-400 led-glow`}></i>
          {project.data.title}
        </h3>
        <div class="mb-4 h-full">
          {project.data.description.split('\n').map((paragraph: string, index: number) => (
            <p class={`mb-2 ${index === 0 ? 'text-gray-200' : 'text-gray-400'}`}>{paragraph}</p>
          ))}
        </div>

        <div class="flex items-center justify-between">
          <div class="flex gap-4 mb-4 text-center justify-center">
            {project.data.links.map((link: any) => (
              <a
                href={link.href}
                target="_blank"
                class="text-gray-400 hover:text-green-400 transition-colors"
                onclick="event.stopPropagation()"
              >
                <Icon name={link.icon} className="text-xl" />
              </a>
            ))}
          </div>

          <a
            href={`/projects/${project.slug}`}
            class="text-green-400 hover:text-green-600 font-medium flex items-center gap-2"
          >
            Read More <i class="fas fa-arrow-right"></i>
          </a>
        </div>
      </div>
    </>
  ) : (
    <>
      {/* description and links */}
      <div class="p-6 flex flex-col justify-between">
        <h3 class="text-xl font-bold font-code text-white mb-2 flex items-center gap-2">
          {project.data.title}
        </h3>
        <div class="mb-4 h-full">
          {project.data.description.split('\n').map((paragraph: string, index: number) => (
            <p class={`mb-2 ${index === 0 ? 'text-gray-200' : 'text-gray-300'}`}>{paragraph}</p>
          ))}
        </div>

        <div class="flex items-center justify-between">
          <div class="flex gap-4 mb-4 text-center justify-center">
            {project.data.links.map((link: any) => (
              <a
                href={link.href}
                target="_blank"
                class="text-gray-400 hover:text-green-400 transition-colors"
                onclick="event.stopPropagation()"
              >
                <Icon name={link.icon} className="text-xl" />
              </a>
            ))}
          </div>

          <a
            href={`/projects/${project.slug}`}
            class="text-green-400 hover:text-green-600 font-medium flex items-center gap-2"
          >
            Read More <i class="fas fa-arrow-right"></i>
          </a>
        </div>
      </div>

      {/* media */}
      <div class="relative mb-8 md:mb-0">
        {isVideo ? (
          <video
            class="w-full h-auto rounded-lg"
            src={project.data.video}
            autoplay
            loop
            muted
            playsinline></video>
        ) : (
          // TODO: fix hardcoded image
          <img
            class="w-full h-auto rounded-lg"
            src='/img/project-mailru-docs/image.png'
            alt={project.data.title}
          />
        )}
      </div>
    </>
  )}
</div>
