---
interface PaginationProps {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props as PaginationProps;

// Generate pagination links
const prevPage = currentPage > 1 ? `${baseUrl}/${currentPage - 1}` : '#';
const nextPage = currentPage < totalPages ? `${baseUrl}/${currentPage + 1}` : '#';
const pageLinks = Array.from({ length: totalPages }, (_, i) => i + 1);
---

<div class="mt-12 flex justify-center gap-2 pagination">
  <a 
    href={prevPage}
    class={`px-4 py-2 bg-gray-800 hover:bg-gray-950 border border-gray-700 text-gray-300 rounded-lg transition-colors ${currentPage === 1 ? 'opacity-50 cursor-not-allowed' : ''}`}
  >
    « Prev
  </a>
  {pageLinks.map((page) => (
    <a 
      href={page === 1 ? baseUrl : `${baseUrl}/${page}`}
      class={`px-4 py-2 bg-gray-800 hover:bg-gray-950 border border-gray-700 text-gray-300 rounded-lg transition-colors ${page === currentPage ? 'active bg-gray-950' : ''}`}
    >
      {page}
    </a>
  ))}
  <a 
    href={nextPage}
    class={`px-4 py-2 bg-gray-800 hover:bg-gray-950 border border-gray-700 text-gray-300 rounded-lg transition-colors ${currentPage === totalPages ? 'opacity-50 cursor-not-allowed' : ''}`}
  >
    Next »
  </a>
</div>